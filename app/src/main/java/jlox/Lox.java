/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jlox;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

/*
    Way back when computers were as big as Winnebagos but had less memory than your watch,
    some people used “scanner” only to refer to the piece of code that dealt with reading
    raw source code characters from disk and buffering them in memory. Then “lexing” was
    the subsequent phase that did useful stuff with the characters.

 */
public class Lox {
    static boolean hadError = false;

    public static void main(String[] args) throws IOException {
        var argCount = args.length;

        if (argCount > 1) {
            System.out.println("Usage: jlox [script]");
            System.exit(Sysexits.EX_USAGE);
        } else if (argCount == 1) {
            runScript(args[0]);
        } else {
            runPrompt();
        }
    }

    static void runScript(String fileName) throws IOException {
        Path scriptPath = getScriptPath(fileName);
        String scriptContents = Files.readString(scriptPath, Charset.defaultCharset());

        run(scriptContents);
        if (hadError) {
            System.exit(Sysexits.EX_DATAERR);
        }
    }

    static void run(String loxSource) {
        System.out.println("rcvd: " + loxSource);
        var scanner = new Scanner(loxSource);
        var tokens = scanner.scanTokens();

        for (var token : tokens) {
            System.out.println(token);
        }
    }

    private static Path getScriptPath(String fileName) {
        var path = Paths.get(fileName);
        verifyScriptFileExistsOrDie(path);

        return path;
    }

    private static void verifyScriptFileExistsOrDie(Path scriptPath) {
        if (Files.notExists(scriptPath) || !Files.isRegularFile(scriptPath)) {
            System.out.println(scriptPath + " doesn't exist or is a directory");
            System.exit(Sysexits.EX_NOINPUT);
        }
    }

    static void error(int line, String message) {
        report(line, "", message);
    }

    private static void report(int line, String where, String message) {
        System.err.printf("[line %s] Error%s: %s\n", line, where, message);
        hadError = true;
    }

    static void runPrompt() throws IOException {
        var isr = new InputStreamReader(System.in);
        var reader = new BufferedReader(isr);

        System.out.println("-=[ Welcome to Lox prompt. To quit, type 'bye()<ENTER>' or press ctrl-d");
        for (; ; ) {
            System.out.print("> ");
            var line = reader.readLine();
            if (line == null || "bye()".equals(line)) {
                System.out.println("exit signal received, quitting");
                break;
            }
            run(line);
        }
    }

}
